#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UndeadEarth.Test.Dal.Utility
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UndeadEarth")]
	public partial class TestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserZombiePackProgressDto(UserZombiePackProgressDto instance);
    partial void UpdateUserZombiePackProgressDto(UserZombiePackProgressDto instance);
    partial void DeleteUserZombiePackProgressDto(UserZombiePackProgressDto instance);
    partial void InsertZombiePackDto(ZombiePackDto instance);
    partial void UpdateZombiePackDto(ZombiePackDto instance);
    partial void DeleteZombiePackDto(ZombiePackDto instance);
    partial void InsertItemDto(ItemDto instance);
    partial void UpdateItemDto(ItemDto instance);
    partial void DeleteItemDto(ItemDto instance);
    partial void InsertSafeHouseItemDto(SafeHouseItemDto instance);
    partial void UpdateSafeHouseItemDto(SafeHouseItemDto instance);
    partial void DeleteSafeHouseItemDto(SafeHouseItemDto instance);
    partial void InsertSafeHouseDto(SafeHouseDto instance);
    partial void UpdateSafeHouseDto(SafeHouseDto instance);
    partial void DeleteSafeHouseDto(SafeHouseDto instance);
    partial void InsertStoreDto(StoreDto instance);
    partial void UpdateStoreDto(StoreDto instance);
    partial void DeleteStoreDto(StoreDto instance);
    partial void InsertUserCountDto(UserCountDto instance);
    partial void UpdateUserCountDto(UserCountDto instance);
    partial void DeleteUserCountDto(UserCountDto instance);
    partial void InsertHotZoneDto(HotZoneDto instance);
    partial void UpdateHotZoneDto(HotZoneDto instance);
    partial void DeleteHotZoneDto(HotZoneDto instance);
    partial void InsertUserDto(UserDto instance);
    partial void UpdateUserDto(UserDto instance);
    partial void DeleteUserDto(UserDto instance);
    partial void InsertUserItemDto(UserItemDto instance);
    partial void UpdateUserItemDto(UserItemDto instance);
    partial void DeleteUserItemDto(UserItemDto instance);
    #endregion
		
		public TestDataContext() : 
				base(global::UndeadEarth.Test.Properties.Settings.Default.UndeadEarthConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserZombiePackProgressDto> UserZombiePackProgressDtos
		{
			get
			{
				return this.GetTable<UserZombiePackProgressDto>();
			}
		}
		
		public System.Data.Linq.Table<ZombiePackDto> ZombiePackDtos
		{
			get
			{
				return this.GetTable<ZombiePackDto>();
			}
		}
		
		public System.Data.Linq.Table<ItemDto> ItemDtos
		{
			get
			{
				return this.GetTable<ItemDto>();
			}
		}
		
		public System.Data.Linq.Table<SafeHouseItemDto> SafeHouseItemDtos
		{
			get
			{
				return this.GetTable<SafeHouseItemDto>();
			}
		}
		
		public System.Data.Linq.Table<SafeHouseDto> SafeHouseDtos
		{
			get
			{
				return this.GetTable<SafeHouseDto>();
			}
		}
		
		public System.Data.Linq.Table<StoreDto> StoreDtos
		{
			get
			{
				return this.GetTable<StoreDto>();
			}
		}
		
		public System.Data.Linq.Table<UserCountDto> UserCountDtos
		{
			get
			{
				return this.GetTable<UserCountDto>();
			}
		}
		
		public System.Data.Linq.Table<HotZoneDto> HotZoneDtos
		{
			get
			{
				return this.GetTable<HotZoneDto>();
			}
		}
		
		public System.Data.Linq.Table<UserDto> UserDtos
		{
			get
			{
				return this.GetTable<UserDto>();
			}
		}
		
		public System.Data.Linq.Table<UserItemDto> UserItemDtos
		{
			get
			{
				return this.GetTable<UserItemDto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserZombiePackProgress")]
	public partial class UserZombiePackProgressDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _UserId;
		
		private System.Guid _ZombiePackId;
		
		private int _ZombiesLeft;
		
		private System.Nullable<System.DateTime> _LastHuntDate;
		
		private int _MaxZombies;
		
		private int _RegenZombieRate;
		
		private int _RegenMinuteTicks;
		
		private System.DateTime _LastRegen;
		
		private bool _IsDestroyed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnZombiePackIdChanging(System.Guid value);
    partial void OnZombiePackIdChanged();
    partial void OnZombiesLeftChanging(int value);
    partial void OnZombiesLeftChanged();
    partial void OnLastHuntDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastHuntDateChanged();
    partial void OnMaxZombiesChanging(int value);
    partial void OnMaxZombiesChanged();
    partial void OnRegenZombieRateChanging(int value);
    partial void OnRegenZombieRateChanged();
    partial void OnRegenMinuteTicksChanging(int value);
    partial void OnRegenMinuteTicksChanged();
    partial void OnLastRegenChanging(System.DateTime value);
    partial void OnLastRegenChanged();
    partial void OnIsDestroyedChanging(bool value);
    partial void OnIsDestroyedChanged();
    #endregion
		
		public UserZombiePackProgressDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZombiePackId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ZombiePackId
		{
			get
			{
				return this._ZombiePackId;
			}
			set
			{
				if ((this._ZombiePackId != value))
				{
					this.OnZombiePackIdChanging(value);
					this.SendPropertyChanging();
					this._ZombiePackId = value;
					this.SendPropertyChanged("ZombiePackId");
					this.OnZombiePackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZombiesLeft", DbType="Int NOT NULL")]
		public int ZombiesLeft
		{
			get
			{
				return this._ZombiesLeft;
			}
			set
			{
				if ((this._ZombiesLeft != value))
				{
					this.OnZombiesLeftChanging(value);
					this.SendPropertyChanging();
					this._ZombiesLeft = value;
					this.SendPropertyChanged("ZombiesLeft");
					this.OnZombiesLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastHuntDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastHuntDate
		{
			get
			{
				return this._LastHuntDate;
			}
			set
			{
				if ((this._LastHuntDate != value))
				{
					this.OnLastHuntDateChanging(value);
					this.SendPropertyChanging();
					this._LastHuntDate = value;
					this.SendPropertyChanged("LastHuntDate");
					this.OnLastHuntDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxZombies", DbType="Int NOT NULL")]
		public int MaxZombies
		{
			get
			{
				return this._MaxZombies;
			}
			set
			{
				if ((this._MaxZombies != value))
				{
					this.OnMaxZombiesChanging(value);
					this.SendPropertyChanging();
					this._MaxZombies = value;
					this.SendPropertyChanged("MaxZombies");
					this.OnMaxZombiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegenZombieRate", DbType="Int NOT NULL")]
		public int RegenZombieRate
		{
			get
			{
				return this._RegenZombieRate;
			}
			set
			{
				if ((this._RegenZombieRate != value))
				{
					this.OnRegenZombieRateChanging(value);
					this.SendPropertyChanging();
					this._RegenZombieRate = value;
					this.SendPropertyChanged("RegenZombieRate");
					this.OnRegenZombieRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegenMinuteTicks", DbType="Int NOT NULL")]
		public int RegenMinuteTicks
		{
			get
			{
				return this._RegenMinuteTicks;
			}
			set
			{
				if ((this._RegenMinuteTicks != value))
				{
					this.OnRegenMinuteTicksChanging(value);
					this.SendPropertyChanging();
					this._RegenMinuteTicks = value;
					this.SendPropertyChanged("RegenMinuteTicks");
					this.OnRegenMinuteTicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRegen", DbType="DateTime NOT NULL")]
		public System.DateTime LastRegen
		{
			get
			{
				return this._LastRegen;
			}
			set
			{
				if ((this._LastRegen != value))
				{
					this.OnLastRegenChanging(value);
					this.SendPropertyChanging();
					this._LastRegen = value;
					this.SendPropertyChanged("LastRegen");
					this.OnLastRegenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDestroyed", DbType="Bit NOT NULL")]
		public bool IsDestroyed
		{
			get
			{
				return this._IsDestroyed;
			}
			set
			{
				if ((this._IsDestroyed != value))
				{
					this.OnIsDestroyedChanging(value);
					this.SendPropertyChanging();
					this._IsDestroyed = value;
					this.SendPropertyChanged("IsDestroyed");
					this.OnIsDestroyedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZombiePacks")]
	public partial class ZombiePackDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private string _Name;
		
		private System.Guid _HotZoneId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHotZoneIdChanging(System.Guid value);
    partial void OnHotZoneIdChanged();
    #endregion
		
		public ZombiePackDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Money NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Money NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotZoneId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid HotZoneId
		{
			get
			{
				return this._HotZoneId;
			}
			set
			{
				if ((this._HotZoneId != value))
				{
					this.OnHotZoneIdChanging(value);
					this.SendPropertyChanging();
					this._HotZoneId = value;
					this.SendPropertyChanged("HotZoneId");
					this.OnHotZoneIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class ItemDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Description;
		
		private int _Price;
		
		private System.Nullable<int> _Energy;
		
		private System.Nullable<int> _Distance;
		
		private System.Nullable<int> _Attack;
		
		private bool _IsOneTimeUse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnEnergyChanging(System.Nullable<int> value);
    partial void OnEnergyChanged();
    partial void OnDistanceChanging(System.Nullable<int> value);
    partial void OnDistanceChanged();
    partial void OnAttackChanging(System.Nullable<int> value);
    partial void OnAttackChanged();
    partial void OnIsOneTimeUseChanging(bool value);
    partial void OnIsOneTimeUseChanged();
    #endregion
		
		public ItemDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Energy", DbType="Int")]
		public System.Nullable<int> Energy
		{
			get
			{
				return this._Energy;
			}
			set
			{
				if ((this._Energy != value))
				{
					this.OnEnergyChanging(value);
					this.SendPropertyChanging();
					this._Energy = value;
					this.SendPropertyChanged("Energy");
					this.OnEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Int")]
		public System.Nullable<int> Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attack", DbType="Int")]
		public System.Nullable<int> Attack
		{
			get
			{
				return this._Attack;
			}
			set
			{
				if ((this._Attack != value))
				{
					this.OnAttackChanging(value);
					this.SendPropertyChanging();
					this._Attack = value;
					this.SendPropertyChanged("Attack");
					this.OnAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOneTimeUse", DbType="Bit NOT NULL")]
		public bool IsOneTimeUse
		{
			get
			{
				return this._IsOneTimeUse;
			}
			set
			{
				if ((this._IsOneTimeUse != value))
				{
					this.OnIsOneTimeUseChanging(value);
					this.SendPropertyChanging();
					this._IsOneTimeUse = value;
					this.SendPropertyChanged("IsOneTimeUse");
					this.OnIsOneTimeUseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SafeHouseItems")]
	public partial class SafeHouseItemDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _SafeHouseId;
		
		private System.Guid _UserId;
		
		private System.Guid _ItemId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSafeHouseIdChanging(System.Guid value);
    partial void OnSafeHouseIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    #endregion
		
		public SafeHouseItemDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeHouseId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SafeHouseId
		{
			get
			{
				return this._SafeHouseId;
			}
			set
			{
				if ((this._SafeHouseId != value))
				{
					this.OnSafeHouseIdChanging(value);
					this.SendPropertyChanging();
					this._SafeHouseId = value;
					this.SendPropertyChanged("SafeHouseId");
					this.OnSafeHouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SafeHouses")]
	public partial class SafeHouseDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private System.Nullable<System.Guid> _HotZoneId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnHotZoneIdChanging(System.Nullable<System.Guid> value);
    partial void OnHotZoneIdChanged();
    #endregion
		
		public SafeHouseDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Money NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Money NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotZoneId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> HotZoneId
		{
			get
			{
				return this._HotZoneId;
			}
			set
			{
				if ((this._HotZoneId != value))
				{
					this.OnHotZoneIdChanging(value);
					this.SendPropertyChanging();
					this._HotZoneId = value;
					this.SendPropertyChanged("HotZoneId");
					this.OnHotZoneIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stores")]
	public partial class StoreDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _HotZoneId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHotZoneIdChanging(System.Nullable<System.Guid> value);
    partial void OnHotZoneIdChanged();
    #endregion
		
		public StoreDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Money NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Money NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotZoneId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> HotZoneId
		{
			get
			{
				return this._HotZoneId;
			}
			set
			{
				if ((this._HotZoneId != value))
				{
					this.OnHotZoneIdChanging(value);
					this.SendPropertyChanging();
					this._HotZoneId = value;
					this.SendPropertyChanged("HotZoneId");
					this.OnHotZoneIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCounts")]
	public partial class UserCountDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<long> _ZombiesKilled;
		
		private System.Nullable<long> _ZombiePacksDestroyed;
		
		private System.Nullable<long> _Miles;
		
		private System.Nullable<long> _HotZonesDestroyed;
		
		private System.Nullable<long> _PeakAttack;
		
		private System.Nullable<long> _AccumulatedMoney;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnZombiesKilledChanging(System.Nullable<long> value);
    partial void OnZombiesKilledChanged();
    partial void OnZombiePacksDestroyedChanging(System.Nullable<long> value);
    partial void OnZombiePacksDestroyedChanged();
    partial void OnMilesChanging(System.Nullable<long> value);
    partial void OnMilesChanged();
    partial void OnHotZonesDestroyedChanging(System.Nullable<long> value);
    partial void OnHotZonesDestroyedChanged();
    partial void OnPeakAttackChanging(System.Nullable<long> value);
    partial void OnPeakAttackChanged();
    partial void OnAccumulatedMoneyChanging(System.Nullable<long> value);
    partial void OnAccumulatedMoneyChanged();
    #endregion
		
		public UserCountDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZombiesKilled", DbType="BigInt")]
		public System.Nullable<long> ZombiesKilled
		{
			get
			{
				return this._ZombiesKilled;
			}
			set
			{
				if ((this._ZombiesKilled != value))
				{
					this.OnZombiesKilledChanging(value);
					this.SendPropertyChanging();
					this._ZombiesKilled = value;
					this.SendPropertyChanged("ZombiesKilled");
					this.OnZombiesKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZombiePacksDestroyed", DbType="BigInt")]
		public System.Nullable<long> ZombiePacksDestroyed
		{
			get
			{
				return this._ZombiePacksDestroyed;
			}
			set
			{
				if ((this._ZombiePacksDestroyed != value))
				{
					this.OnZombiePacksDestroyedChanging(value);
					this.SendPropertyChanging();
					this._ZombiePacksDestroyed = value;
					this.SendPropertyChanged("ZombiePacksDestroyed");
					this.OnZombiePacksDestroyedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miles", DbType="BigInt")]
		public System.Nullable<long> Miles
		{
			get
			{
				return this._Miles;
			}
			set
			{
				if ((this._Miles != value))
				{
					this.OnMilesChanging(value);
					this.SendPropertyChanging();
					this._Miles = value;
					this.SendPropertyChanged("Miles");
					this.OnMilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotZonesDestroyed", DbType="BigInt")]
		public System.Nullable<long> HotZonesDestroyed
		{
			get
			{
				return this._HotZonesDestroyed;
			}
			set
			{
				if ((this._HotZonesDestroyed != value))
				{
					this.OnHotZonesDestroyedChanging(value);
					this.SendPropertyChanging();
					this._HotZonesDestroyed = value;
					this.SendPropertyChanged("HotZonesDestroyed");
					this.OnHotZonesDestroyedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakAttack", DbType="BigInt")]
		public System.Nullable<long> PeakAttack
		{
			get
			{
				return this._PeakAttack;
			}
			set
			{
				if ((this._PeakAttack != value))
				{
					this.OnPeakAttackChanging(value);
					this.SendPropertyChanging();
					this._PeakAttack = value;
					this.SendPropertyChanged("PeakAttack");
					this.OnPeakAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccumulatedMoney", DbType="BigInt")]
		public System.Nullable<long> AccumulatedMoney
		{
			get
			{
				return this._AccumulatedMoney;
			}
			set
			{
				if ((this._AccumulatedMoney != value))
				{
					this.OnAccumulatedMoneyChanging(value);
					this.SendPropertyChanging();
					this._AccumulatedMoney = value;
					this.SendPropertyChanged("AccumulatedMoney");
					this.OnAccumulatedMoneyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotZones")]
	public partial class HotZoneDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private string _Name;
		
		private bool _CanStartHere;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCanStartHereChanging(bool value);
    partial void OnCanStartHereChanged();
    #endregion
		
		public HotZoneDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Money NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Money NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanStartHere", DbType="Bit NOT NULL")]
		public bool CanStartHere
		{
			get
			{
				return this._CanStartHere;
			}
			set
			{
				if ((this._CanStartHere != value))
				{
					this.OnCanStartHereChanging(value);
					this.SendPropertyChanging();
					this._CanStartHere = value;
					this.SendPropertyChanged("CanStartHere");
					this.OnCanStartHereChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class UserDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Email;
		
		private string _DisplayName;
		
		private System.Guid _ZoneId;
		
		private System.Guid _LocationId;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private System.Nullable<int> _LastEnergy;
		
		private System.Nullable<System.DateTime> _LastEnergyDate;
		
		private System.Nullable<int> _MaxEnergy;
		
		private int _Money;
		
		private System.Nullable<System.Guid> _LastVisitedHotZoneId;
		
		private int _BaseLineAttackPower;
		
		private int _BaseLineEnergy;
		
		private System.Nullable<int> _LastSightRadius;
		
		private System.Nullable<System.DateTime> _LastSightRadiusDate;
		
		private System.Nullable<int> _BaseSightRadius;
		
		private int _Level;
		
		private int _PossibleItemAmount;
		
		private int _CurrentBaseEnergy;
		
		private int _CurrentBaseAttack;
		
		private long _FacebookUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnZoneIdChanging(System.Guid value);
    partial void OnZoneIdChanged();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnLastEnergyChanging(System.Nullable<int> value);
    partial void OnLastEnergyChanged();
    partial void OnLastEnergyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEnergyDateChanged();
    partial void OnMaxEnergyChanging(System.Nullable<int> value);
    partial void OnMaxEnergyChanged();
    partial void OnMoneyChanging(int value);
    partial void OnMoneyChanged();
    partial void OnLastVisitedHotZoneIdChanging(System.Nullable<System.Guid> value);
    partial void OnLastVisitedHotZoneIdChanged();
    partial void OnBaseLineAttackPowerChanging(int value);
    partial void OnBaseLineAttackPowerChanged();
    partial void OnBaseLineEnergyChanging(int value);
    partial void OnBaseLineEnergyChanged();
    partial void OnLastSightRadiusChanging(System.Nullable<int> value);
    partial void OnLastSightRadiusChanged();
    partial void OnLastSightRadiusDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSightRadiusDateChanged();
    partial void OnBaseSightRadiusChanging(System.Nullable<int> value);
    partial void OnBaseSightRadiusChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnPossibleItemAmountChanging(int value);
    partial void OnPossibleItemAmountChanged();
    partial void OnCurrentBaseEnergyChanging(int value);
    partial void OnCurrentBaseEnergyChanged();
    partial void OnCurrentBaseAttackChanging(int value);
    partial void OnCurrentBaseAttackChanged();
    partial void OnFacebookUserIdChanging(long value);
    partial void OnFacebookUserIdChanged();
    #endregion
		
		public UserDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ZoneId
		{
			get
			{
				return this._ZoneId;
			}
			set
			{
				if ((this._ZoneId != value))
				{
					this.OnZoneIdChanging(value);
					this.SendPropertyChanging();
					this._ZoneId = value;
					this.SendPropertyChanged("ZoneId");
					this.OnZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Money NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Money NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEnergy", DbType="Int")]
		public System.Nullable<int> LastEnergy
		{
			get
			{
				return this._LastEnergy;
			}
			set
			{
				if ((this._LastEnergy != value))
				{
					this.OnLastEnergyChanging(value);
					this.SendPropertyChanging();
					this._LastEnergy = value;
					this.SendPropertyChanged("LastEnergy");
					this.OnLastEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEnergyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEnergyDate
		{
			get
			{
				return this._LastEnergyDate;
			}
			set
			{
				if ((this._LastEnergyDate != value))
				{
					this.OnLastEnergyDateChanging(value);
					this.SendPropertyChanging();
					this._LastEnergyDate = value;
					this.SendPropertyChanged("LastEnergyDate");
					this.OnLastEnergyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxEnergy", DbType="Int")]
		public System.Nullable<int> MaxEnergy
		{
			get
			{
				return this._MaxEnergy;
			}
			set
			{
				if ((this._MaxEnergy != value))
				{
					this.OnMaxEnergyChanging(value);
					this.SendPropertyChanging();
					this._MaxEnergy = value;
					this.SendPropertyChanged("MaxEnergy");
					this.OnMaxEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Int NOT NULL")]
		public int Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVisitedHotZoneId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LastVisitedHotZoneId
		{
			get
			{
				return this._LastVisitedHotZoneId;
			}
			set
			{
				if ((this._LastVisitedHotZoneId != value))
				{
					this.OnLastVisitedHotZoneIdChanging(value);
					this.SendPropertyChanging();
					this._LastVisitedHotZoneId = value;
					this.SendPropertyChanged("LastVisitedHotZoneId");
					this.OnLastVisitedHotZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseLineAttackPower", DbType="Int NOT NULL")]
		public int BaseLineAttackPower
		{
			get
			{
				return this._BaseLineAttackPower;
			}
			set
			{
				if ((this._BaseLineAttackPower != value))
				{
					this.OnBaseLineAttackPowerChanging(value);
					this.SendPropertyChanging();
					this._BaseLineAttackPower = value;
					this.SendPropertyChanged("BaseLineAttackPower");
					this.OnBaseLineAttackPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseLineEnergy", DbType="Int NOT NULL")]
		public int BaseLineEnergy
		{
			get
			{
				return this._BaseLineEnergy;
			}
			set
			{
				if ((this._BaseLineEnergy != value))
				{
					this.OnBaseLineEnergyChanging(value);
					this.SendPropertyChanging();
					this._BaseLineEnergy = value;
					this.SendPropertyChanged("BaseLineEnergy");
					this.OnBaseLineEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSightRadius", DbType="Int")]
		public System.Nullable<int> LastSightRadius
		{
			get
			{
				return this._LastSightRadius;
			}
			set
			{
				if ((this._LastSightRadius != value))
				{
					this.OnLastSightRadiusChanging(value);
					this.SendPropertyChanging();
					this._LastSightRadius = value;
					this.SendPropertyChanged("LastSightRadius");
					this.OnLastSightRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSightRadiusDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSightRadiusDate
		{
			get
			{
				return this._LastSightRadiusDate;
			}
			set
			{
				if ((this._LastSightRadiusDate != value))
				{
					this.OnLastSightRadiusDateChanging(value);
					this.SendPropertyChanging();
					this._LastSightRadiusDate = value;
					this.SendPropertyChanged("LastSightRadiusDate");
					this.OnLastSightRadiusDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseSightRadius", DbType="Int")]
		public System.Nullable<int> BaseSightRadius
		{
			get
			{
				return this._BaseSightRadius;
			}
			set
			{
				if ((this._BaseSightRadius != value))
				{
					this.OnBaseSightRadiusChanging(value);
					this.SendPropertyChanging();
					this._BaseSightRadius = value;
					this.SendPropertyChanged("BaseSightRadius");
					this.OnBaseSightRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleItemAmount", DbType="Int NOT NULL")]
		public int PossibleItemAmount
		{
			get
			{
				return this._PossibleItemAmount;
			}
			set
			{
				if ((this._PossibleItemAmount != value))
				{
					this.OnPossibleItemAmountChanging(value);
					this.SendPropertyChanging();
					this._PossibleItemAmount = value;
					this.SendPropertyChanged("PossibleItemAmount");
					this.OnPossibleItemAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBaseEnergy", DbType="Int NOT NULL")]
		public int CurrentBaseEnergy
		{
			get
			{
				return this._CurrentBaseEnergy;
			}
			set
			{
				if ((this._CurrentBaseEnergy != value))
				{
					this.OnCurrentBaseEnergyChanging(value);
					this.SendPropertyChanging();
					this._CurrentBaseEnergy = value;
					this.SendPropertyChanged("CurrentBaseEnergy");
					this.OnCurrentBaseEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBaseAttack", DbType="Int NOT NULL")]
		public int CurrentBaseAttack
		{
			get
			{
				return this._CurrentBaseAttack;
			}
			set
			{
				if ((this._CurrentBaseAttack != value))
				{
					this.OnCurrentBaseAttackChanging(value);
					this.SendPropertyChanging();
					this._CurrentBaseAttack = value;
					this.SendPropertyChanged("CurrentBaseAttack");
					this.OnCurrentBaseAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookUserId", DbType="BigInt NOT NULL")]
		public long FacebookUserId
		{
			get
			{
				return this._FacebookUserId;
			}
			set
			{
				if ((this._FacebookUserId != value))
				{
					this.OnFacebookUserIdChanging(value);
					this.SendPropertyChanging();
					this._FacebookUserId = value;
					this.SendPropertyChanged("FacebookUserId");
					this.OnFacebookUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserItems")]
	public partial class UserItemDto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserItemId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.Guid> _ItemId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserItemIdChanging(System.Guid value);
    partial void OnUserItemIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnItemIdChanging(System.Nullable<System.Guid> value);
    partial void OnItemIdChanged();
    #endregion
		
		public UserItemDto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserItemId
		{
			get
			{
				return this._UserItemId;
			}
			set
			{
				if ((this._UserItemId != value))
				{
					this.OnUserItemIdChanging(value);
					this.SendPropertyChanging();
					this._UserItemId = value;
					this.SendPropertyChanged("UserItemId");
					this.OnUserItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
